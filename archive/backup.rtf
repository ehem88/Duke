{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red70\green137\blue204;\red23\green23\blue23;\red202\green202\blue202;
\red167\green197\blue152;\red194\green126\blue101;}
{\*\expandedcolortbl;;\cssrgb\c33725\c61176\c83922;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c70980\c80784\c65882;\cssrgb\c80784\c56863\c47059;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 static\cf4 \strokec4  \cf2 \strokec2 void\cf4 \strokec4  Main(\cf2 \strokec2 string\cf4 \strokec4 [] args)\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \{\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 string\cf4 \strokec4 [] items = \cf2 \strokec2 new\cf4 \strokec4  \cf2 \strokec2 string\cf4 \strokec4 [\cf5 \strokec5 100\cf4 \strokec4 ];\cb1 \
\cf2 \cb3 \strokec2 string\cf4 \strokec4  input;\cb1 \
\cf2 \cb3 \strokec2 string\cf4 \strokec4  newItem;\cb1 \
\cf2 \cb3 \strokec2 int\cf4 \strokec4  numItems=\cf5 \strokec5 0\cf4 \strokec4 ;\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 newItem=\cf2 \strokec2 null\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 string\cf4 \strokec4  name=\cf6 \strokec6 "Boot.Y.Call"\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 Console.WriteLine(\cf6 \strokec6 $"\\n\\nHello! I'm \{name\}"\cf4 \strokec4 ); \cb1 \
\cb3 Console.WriteLine(\cf6 \strokec6 "What can I do for you?\\n"\cf4 \strokec4 );\cb1 \
\
\cb3 Console.WriteLine(\cf6 \strokec6 $"What are you feeding me today?(ENTER EXITS THE PROGRAM)"\cf4 \strokec4 );\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 while\cf4 \strokec4 (!Equals(newItem, \cf6 \strokec6 "bye"\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3   \cf2 \strokec2 if\cf4 \strokec4 (!Equals(newItem, \cf6 \strokec6 "list"\cf4 \strokec4 ) && !Equals(newItem, \cf6 \strokec6 "bye"\cf4 \strokec4 ))\cb1 \
\cb3   \{\cb1 \
\cb3     input = Console.ReadLine();\cb1 \
\cb3     newItem= input;\cb1 \
\
\cb3         \cf2 \strokec2 if\cf4 \strokec4  ((newItem!=\cf6 \strokec6 "list"\cf4 \strokec4 ) && (newItem!=\cf6 \strokec6 "bye"\cf4 \strokec4 ) && (newItem!=\cf6 \strokec6 ""\cf4 \strokec4 ))\cb1 \
\cb3         \{\cb1 \
\cb3             items[numItems] = newItem;\cb1 \
\cb3             numItems++;\cb1 \
\cb3             Console.WriteLine(\cf6 \strokec6 "added: "\cf4 \strokec4  + input);\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf2 \strokec2 else\cf4 \strokec4  \cf2 \strokec2 if\cf4 \strokec4  (newItem == \cf6 \strokec6 "list"\cf4 \strokec4 )       \cb1 \
\cb3         \{\cb1 \
\cb3             \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 int\cf4 \strokec4  i = \cf5 \strokec5 0\cf4 \strokec4 ; i < numItems; i++)\cb1 \
\cb3             \{\cb1 \
\
\cb3                 Console.WriteLine((i + \cf5 \strokec5 1\cf4 \strokec4 ) + \cf6 \strokec6 ".\\t"\cf4 \strokec4  + items[i]);\cb1 \
\
\cb3             \}\cb1 \
\cb3                 Console.WriteLine(\cf6 \strokec6 "end list\\n"\cf4 \strokec4 );\cb1 \
\cb3                 newItem = \cf2 \strokec2 null\cf4 \strokec4 ;\cb1 \
\
\cb3         \}\cb1 \
\
\cb3         \cf2 \strokec2 else\cf4 \strokec4  \cf2 \strokec2 if\cf4 \strokec4   ((newItem==\cf6 \strokec6 "bye"\cf4 \strokec4 ) || (newItem==\cf6 \strokec6 ""\cf4 \strokec4 ))\cb1 \
\cb3         \{\cb1 \
\cb3             Console.WriteLine(\cf6 \strokec6 "bye ass!!"\cf4 \strokec4 );\cb1 \
\cb3             newItem=\cf6 \strokec6 "bye"\cf4 \strokec4 ;\cb1 \
\cb3         \}\cb1 \
\
\cb3     \}\cb1 \
\
\
\
\cb3 \}\cb1 \
\
\
\
\cb3     \}\cb1 \
}